#!/bin/sh

#Toggle a default gap setting if it's not already set.
if [ -z "$BSPWM_GAPS" ]; then export BSPWM_GAPS=true; fi

#Add panel scripts to path:
export PATH=$PATH:~/.config/bar

#Get panel variables
. ~/.config/bar/profile

#get the value of a color from the current xrdb load configuration
getXresColor() {
    echo -n "$( xrdb -query | grep  "\*.$1:" | grep -oE "#[a-zA-Z0-9]{6}" )";
}

# Visual options
BW=8        #border width
WG=20       #window gap
bspc config border_width $BW
bspc config split_ratio              0.6

#colors
bspc config normal_border_color "$(getXresColor color0)"
bspc config active_border_color "$(getXresColor color8)"
bspc config focused_border_color "$(getXresColor foreground)"
bspc config presel_border_color "$(getXresColor color8)"
bspc config urgent_border_color "#FFFF00"
bspc config focused_locked_border_color "#FFFFFF"

#focus options:
bspc config focus_follows_pointer true
bspc config pointer_follows_monitor false
bspc config pointer_follows_focus false
bspc config focus_by_distance true

#behavior settings
bspc config auto_alternate true
bspc config auto_cancel true

#rules
bspc rule -a mplayer2 floating=on
bspc rule -a gimp floating=on
bspc rule -a Screenkey manage=off

bspc config left_padding 0
bspc config right_padding 0
bspc config bottom_padding 0

# set window spacing according to gap settings:
if [ "$BSPWM_GAPS" = true ]; then
    bspc config window_gap         $WG
    bspc config top_padding        $(expr $PANEL_HEIGHT + $PANEL_GAP)
    bspc config borderless_monocle false
else
    bspc config window_gap         0
    bspc config top_padding        $(expr $PANEL_HEIGHT + $BW)
    bspc config borderless_monocle  true

    #overlapping borders
    bspc config window_gap -$BW
    for side in right bottom left ; do
        bspc config ${side}_padding $BW
    done
fi

killall panel
~/.config/bar/panel &

desktops=$(bspc query -M)

#determine if this is initial run by seeing if monitors have been renamed to numbers yet
echo "$desktops" | grep -q "[a-zA-Z]"
if [ $? -eq 0 ]; then IsInitialRun=true; else IsInitialRun=false; fi

#rename all the monitors to numbers and create 5 workspaces on each
i=1

for monitor in $desktops; do
    [ "$IsInitialRun" = true ] && \
        bspc monitor "$monitor" -n $i -d $i/{i,ii,iii,iiii,iiiii} || \
        bspc monitor "$monitor" -d $i/{i,ii,iii,iiii,iiiii}
    let i++
done

[ "$IsInitialRun" = true ] && ~/.config/bspwm/.autostart.sh
